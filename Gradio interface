{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyMFrXy0/79FHZTUfVCtRevY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L4mXUr_NTM36","executionInfo":{"status":"ok","timestamp":1750799484253,"user_tz":-180,"elapsed":24614,"user":{"displayName":"Saud Mohammed","userId":"01282138489386909771"}},"outputId":"63638668-615d-46a7-9b57-4092c8088dd2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"]},{"cell_type":"code","source":["from transformers import T5ForConditionalGeneration, T5Tokenizer\n","\n","model_path = \"/content/drive/MyDrive/t5_summarizer_model\"\n","\n","model = T5ForConditionalGeneration.from_pretrained(model_path)\n","tokenizer = T5Tokenizer.from_pretrained(model_path)\n"],"metadata":{"id":"8cqNXpX4TkMv","executionInfo":{"status":"ok","timestamp":1750799515413,"user_tz":-180,"elapsed":23281,"user":{"displayName":"Saud Mohammed","userId":"01282138489386909771"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["from transformers import T5Config\n","config = T5Config.from_pretrained(\"t5-small\")\n","print(config.num_layers)\n","print(config.d_model)\n","print(config.num_heads)\n","print(config.d_ff)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g2kz5sJYsTsi","executionInfo":{"status":"ok","timestamp":1750799529892,"user_tz":-180,"elapsed":274,"user":{"displayName":"Saud Mohammed","userId":"01282138489386909771"}},"outputId":"793a8685-f868-4f95-9918-1ad94618c28a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n","512\n","8\n","2048\n"]}]},{"cell_type":"code","source":["import gradio as gr\n","\n","def summarize_article(text, max_input_len, max_summary_len, beam_width):\n","    input_text = \"summarize: \" + text.strip()\n","    input_ids = tokenizer.encode(input_text, return_tensors=\"pt\", truncation=True, padding=\"max_length\", max_length=max_input_len)\n","    output_ids = model.generate(\n","        input_ids,\n","        max_length=max_summary_len,\n","        num_beams=beam_width,\n","        repetition_penalty=1.5,\n","        length_penalty=1.0,\n","        no_repeat_ngram_size=2,\n","        early_stopping=True\n","    )\n","    return tokenizer.decode(output_ids[0], skip_special_tokens=True)\n","\n","gr.Interface(\n","    fn=summarize_article,\n","    inputs=[\n","        gr.Textbox(label=\"üì∞ Input Article\", lines=15, placeholder=\"Paste article here...\"),\n","        gr.Slider(128, 1024, value=512, step=64, label=\"üìè Max Input Length\"),\n","        gr.Slider(32, 256, value=128, step=16, label=\"üìù Max Summary Length\"),\n","        gr.Slider(1, 8, value=4, step=1, label=\"üîç Beam Width\")\n","    ],\n","    outputs=gr.Textbox(label=\"üß† Generated Summary\"),\n","    title=\"üß† T5-Small News Summarizer\",\n","    description=\"Summarize articles using your custom fine-tuned T5 model. Tweak the input length, output length, and beam width to control generation.\",\n","    theme=\"soft\",\n","\n",").launch(share=True)  # change to False if you don't need a public URL\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":592},"id":"mwEZMF7zTpzb","executionInfo":{"status":"ok","timestamp":1750799555408,"user_tz":-180,"elapsed":2685,"user":{"displayName":"Saud Mohammed","userId":"01282138489386909771"}},"outputId":"895aa4d5-c4b6-4ab9-ebdc-e1aa3e38cae5"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Colab notebook detected. To show errors in colab notebook, set debug=True in launch()\n","* Running on public URL: https://b971e99337f4cc498a.gradio.live\n","\n","This share link expires in 1 week. For free permanent hosting and GPU upgrades, run `gradio deploy` from the terminal in the working directory to deploy to Hugging Face Spaces (https://huggingface.co/spaces)\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div><iframe src=\"https://b971e99337f4cc498a.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":[]},"metadata":{},"execution_count":6}]}]}